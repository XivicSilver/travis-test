# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

language: node_js

node_js:
    - 0.10

env:
    global:
      # GH_OAUTH_TOKEN is the oauth token generated as described at
      # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
      #
      # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
      #
      # It must be encrypted using the travis gem
      # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
      #
      # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
      #
      # User specific env variables
      - secure: "LeWP8ZZ3RR20bieH+UDCio5zULd7E6Wci20X961zLCEeSbPnsE48Nqc1WanI5PDMCWpv2E+78yXfB9cGDj3f7cKZrF67tfxq5t+AHXB9/xsmCqpPOF3ztRffw20HnaOR3cHEBUbUopD2kOYVOogU0b5TsKafc2rt0NcmA5/qnoA="
      - GH_OWNER: nicolae-olariu
      - GH_PROJECT_NAME: travis-test
      - GH_BRANCH_NAME: deploy-staging
      - DESTINATION_FOLDER: dist
      - DEPLOY_SITE: deploy_site
      - GH_PROJECT_URL: https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME}

branches:
  only:
    - master

before_script:
  # install needed dependencies
  - npm install -g bower grunt-build-control grunt-cli grunt
  - gem install compass
  - bower install
  # run tests on FF - http://docs.travis-ci.com/user/gui-and-headless-browsers/
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"

after_success:
  # build the mofo
  - grunt build
  - git fetch
  # modify travis.yml file
  - echo " " >> .travis.yml
  # and stash that change
  - git stash
  # echo the stash, just to check if it's there
  - git stash list
  # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
  - git submodule add -b ${GH_BRANCH_NAME} ${GH_PROJECT_URL} ${DEPLOY_SITE} > /dev/null 2>&1
  - cd ${DEPLOY_SITE}
  - if git checkout ${GH_BRANCH_NAME}; then git checkout -b ${GH_BRANCH_NAME}; fi
  - git rm -r . && git checkout .travis.yml
  - cp -R ../${DESTINATION_FOLDER}/* .
  - cp ../${DESTINATION_FOLDER}/.* .
  - echo "bower_components" >> .gitignore
  # pop the .travis.yml file from the stash
  - git stash apply
  - git add .
  - git config user.email "git@xivic.com"
  - git config user.name "xivic"
  - git commit -am "[travis deploy] adding build files to specific branch"
  # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
  - git push ${GH_PROJECT_URL} HEAD:${GH_BRANCH_NAME} > /dev/null 2>&1
